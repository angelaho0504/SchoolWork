Test date: 06/12/19  02:39:28 
The number of times you used the grading program is 13 
In the business world, your customer replaces the grading program. 
The goal is a correct program with the fewest grading attempts. 
Key Grading System Version 4.1
Student: Last=Ho                   First=Angela               Type=Individual          
Grading and testing history log
       User Test.    Date: 06/09/19  04:47:15  keyboard     test         
       User Test.    Date: 06/09/19  05:41:14  nt           test         
       User Test.    Date: 06/09/19  05:50:09  nt           test         
       User Test.    Date: 06/09/19  15:45:42  keyboard     test         
       User Test.    Date: 06/09/19  15:52:28  keyboard     test         
       User Test.    Date: 06/09/19  16:10:10  keyboard     test         
       User Test.    Date: 06/09/19  23:28:59  keyboard     test         
       User Test.    Date: 06/09/19  23:29:49  keyboard     test         
       User Test.    Date: 06/09/19  23:30:12  keyboard     test         
       User Test.    Date: 06/09/19  23:30:14  keyboard     test         
   *** Grading Run.  Date: 06/09/19  23:32:49 
       User Test.    Date: 06/09/19  23:34:29  keyboard     test         
       User Test.    Date: 06/09/19  23:38:17  keyboard     test         
   *** Grading Run.  Date: 06/09/19  23:38:45 
       User Test.    Date: 06/09/19  23:52:09  keyboard     test         
       User Test.    Date: 06/09/19  23:52:25  keyboard     test         
       User Test.    Date: 06/11/19  17:20:46  keyboard     test         
       User Test.    Date: 06/11/19  17:20:51  keyboard     test         
       User Test.    Date: 06/11/19  17:51:41  keyboard     test         
       User Test.    Date: 06/11/19  17:52:11  keyboard     test         
       User Test.    Date: 06/11/19  17:54:08  keyboard     test         
       User Test.    Date: 06/11/19  17:54:23  keyboard     test         
   *** Grading Run.  Date: 06/11/19  17:54:54 
       User Test.    Date: 06/11/19  17:58:32  keyboard     test         
       User Test.    Date: 06/11/19  18:18:30  keyboard     test         
       User Test.    Date: 06/11/19  18:34:17  keyboard     test         
       User Test.    Date: 06/11/19  18:39:07  keyboard     test         
       User Test.    Date: 06/11/19  18:42:43  keyboard     test         
       User Test.    Date: 06/11/19  18:49:47  keyboard     test         
       User Test.    Date: 06/11/19  19:04:30  keyboard     test         
       User Test.    Date: 06/11/19  19:27:27  keyboard     test         
       User Test.    Date: 06/11/19  19:39:43  keyboard     test         
   *** Grading Run.  Date: 06/11/19  19:39:54 
       User Test.    Date: 06/11/19  21:08:20  keyboard     test         
       User Test.    Date: 06/11/19  21:57:30  keyboard     test         
   *** Grading Run.  Date: 06/11/19  21:57:45 
       User Test.    Date: 06/11/19  22:03:39  keyboard     test         
   *** Grading Run.  Date: 06/11/19  22:03:48 
       User Test.    Date: 06/11/19  22:16:51  keyboard     test         
       User Test.    Date: 06/11/19  22:16:55  keyboard     test         
   *** Grading Run.  Date: 06/11/19  22:17:02 
       User Test.    Date: 06/11/19  22:39:21  keyboard     test         
   *** Grading Run.  Date: 06/11/19  22:39:27 
       User Test.    Date: 06/11/19  24:22:56  keyboard     test         
       User Test.    Date: 06/11/19  24:23:57  keyboard     test         
       User Test.    Date: 06/11/19  24:24:58  keyboard     test         
   *** Grading Run.  Date: 06/11/19  24:25:06 
       User Test.    Date: 06/11/19  24:37:02  keyboard     test         
   *** Grading Run.  Date: 06/11/19  24:37:10 
       User Test.    Date: 06/11/19  24:38:05  keyboard     test         
   *** Grading Run.  Date: 06/11/19  24:38:19 
       User Test.    Date: 06/11/19  24:39:03  keyboard     test         
       User Test.    Date: 06/12/19  02:11:05  keyboard     test         
   *** Grading Run.  Date: 06/12/19  02:11:16 
       User Test.    Date: 06/12/19  02:39:20  keyboard     test         
   *** Grading Run.  Date: 06/12/19  02:39:28 
Running test
Test ran correctly.
++ Grade ++   60 = Points earned for correct answers.

-> A major reason for programming in assembler is to maximize efficiency.
This can be instructions written and/or instructions executed.
Please read the section in the class notes titled Code Complexity.

We are now analyzing your source code. You will be graded on
the number of instructions you wrote to solve this problem.
The target for the number of executable instructions written is:
20 points for   0 -  20  
15 points for  21 -  22  
10 points for  23 -  24 
05 points for  25 -  26 
00 points for  27+      
Your actual counts are:
Lines .......  84    Comments ...  53    Labels .......   4   
Directives ..   5    Variables ..   0    Executables ..  22    McCabe ..   8 
++ Grade ++   15 = Points earned for code written efficiency.  

The McCabe number for your KEY.ASM is 8 which is considered 
fine for the KEY assignment and indicates reasonable program structure.

-> Analyzing program documentation. 
The heuristic algorithms used may have problems with your specific code. 
Contact the instructor if you detect a problem with your grade. 
DOCPH-0015 The program header format is adequate. 
DOCHB-1.14 Use of code block headers is adequate. 
DOCLC-0.91 Use of line comments is adequate. 
++ Grade ++   20 = Points earned for correct documentation.    

-> Calculating the total grade for the program.                  
This grade is subject to adjustment by the instructor.           
This grade will be reduced by any late submission penalty.       
++ Grade ++   95 = Total grade generated by the Grading System.  

-> Statistics on testing and grading                             
    43  = Number of user tests.                                  
    13  = Number of grading runs to get the program working.     
     0  = Number of grading runs to improve efficiency or documentation. 

+- atyC<6&}xC7;&k~C6&juiC86&zuzC?;&Zkyz&jgzk@&6<57857?&&68@9?@8>&

Building the file key.ans for electronic submission...
;--------------------------------------------------------------------
;   Program:  Key ( MASM version)
;
;   Function: Reads printable characters (20h-7Fh) from the Standard Input (keyboard or a
;             redirected ASCII text file) without echo(using ah=08h and int 21h). If the
;             character is an upper case letter or a space then write it to the standard output.
;             If the charater is a lower case letter then process it to an upper case letter then
;             write it to the standard output. If the character is a period then write it to the
;             standard output and exit out the program.
;
;   Owner:    Angela Ho
;
;   Date:     Changes
;   06/09/19  original version
;---------------------------------------
        .model      small              ; 64k code and 64k data
        .8086                          ; only allow 8086 instructions
        .stack      256                ; reserve 256 bytes for the stack
;---------------------------------------
        .code                          ;start the code segmen
;---------------------------------------
key:
;---------------------------------------
; while ( ch != '.' )
;---------------------------------------
while_:                                ;
;---------------------------------------
; ch = getchar()
;---------------------------------------
         mov        ah,8;              ; set up to read a character without echo
         int        21h                ; read the character
;---------------------------------------
; if ( ch == ' ' )
;---------------------------------------
         cmp        al, 20h            ; is the char a space
         je         display_           ; display the character
;---------------------------------------
; else if ( ch == '.' )
;---------------------------------------
         cmp        al, 2Eh            ; is the char a period
         je         display_           ; display the character
;---------------------------------------
; else if ( ch < 'A' )
;---------------------------------------
         cmp        al, 41h            ; is the char lower than 'A' in ASCII
         jl         while_             ; Lower then 'A' in ASCII, throw away
;---------------------------------------
; else if ( ch <= 'Z' )
;---------------------------------------
         cmp        al, 5Ah            ;
         jle        display_          ; display the character
;---------------------------------------
; else if ( ch < 'a' )
;---------------------------------------
         cmp        al, 61h            ; is the char lower than 'a' in ASCII
         jl         while_             ; Lower then 'a' in ASCII, throw away
;---------------------------------------
; else if ( ch <= 'z' )
;---------------------------------------
         cmp        al, 7Ah            ; is the char lower and equal to 'z' in ASCII
         jg         while_             ; everything else is gone
;---------------------------------------
; ch = ch - 32
;---------------------------------------
         sub        al, 20h            ; convert to upper case
;---------------------------------------
; putchar(ch)
;---------------------------------------
display_:
         mov        ah,2               ; set up to print a character
         mov        dl,al              ;
         int        21h                ; print the character
         cmp        al, 2Eh            ; is char a period
         jne        while_             ; no, repeat while
;---------------------------------------
; Terminate the Program
;---------------------------------------
exit:
         mov        ax,4c00h           ; set dos code to terminate program
         int        21h                ; return to dos
         end        key                ;end marks the end of the source code
                                       ;....and specifies where you want the
                                       ;....program to start execution
;---------------------------------------
