Microsoft (R) Macro Assembler Version 6.11		    06/25/19 23:29:34
tabs.asm						     Page 1 - 1


				;--------------------------------------------------------------------
				;   Program:  Tabs ( MASM version)
				;
				;   Function: Reads lines from an ASCII input text file which is redirected to the
				;             standard input, performs some simple text editing on the lines,
				;             and writes the updated lines to an ASCII output text
				;             file which is redirected from the standard output. The specific
				;             editing function is to expand tabs (replace tabs with  the
				;             correct number of spaces) to create columns.
				;
				;   Owner:    Angela Ho
				;
				;   Date:     Changes
				;   06/18/19  original version
				;---------------------------------------
				        .model      small              ; 64k code and 64k data
				        .8086                          ; only allow 8086 instructions
				        .stack      256                ; reserve 256 bytes for the stack
				;---------------------------------------
				
				;---------------------------------------
 0000				         .data                         ;start the data segment
				;---------------------------------------
 0000				         .code                         ;start the code segment
				;---------------------------------------
 0000				tabs:
				;---------------------------------------
				; test whether the a CLP was typed
				;---------------------------------------
 0000  B3 0A			        mov         bl,0Ah             ; set the number of space to 10
 0002  26: 80 3E 0080 00	        cmp         byte ptr es:[80h], 0 ; access the CLP count 80h bytes into the extra segment
 0008  74 0A			        je          while_             ;  no parameter ... continue with the program
 000A  26: 8A 1E 0082		        mov         bl, byte ptr es:[82h] ; parameter entered ... load al with the CLP character
 000F  80 EB 30			        sub         bl, 30h            ; convert the to hex value
 0012				set:
 0012  B5 00			        mov        ch,0                ; set the counter to 0
				;---------------------------------------
				; while (1)
				;---------------------------------------
 0014				while_:                                ;
				;---------------------------------------
				; ch = getchar()
				;---------------------------------------
 0014  B4 08			         mov        ah,8;              ; set up to read a character without echo
 0016  CD 21			         int        21h                ; read the character
				;---------------------------------------
				; if (ch == 9 )
				;---------------------------------------
 0018  3C 09			         cmp        al, 09h            ; is the char a tab
 001A  8A C8			         mov        cl, al             ; move data in al to t
 001C  75 08			         jne        put                ; if not tab just output the character
 001E				printtab:
 001E  B0 20			         mov        al, 20h            ; move space character to al
 0020  38 DD			         cmp        ch,bl              ; compare counter with user enter value
 0022  75 02			         jne        put                ; not equal go to put
 0024  EB EC			         jmp        set                ; equal then reset
				;---------------------------------------
				; putchar(ch)
				;---------------------------------------
 0026				put:
 0026  B4 02			         mov        ah,2               ; set up to print a character
 0028  8A D0			         mov        dl,al              ;
 002A  CD 21			         int        21h                ; print the character
 002C  80 C5 01			         add        ch, 1              ; count ++
 002F  80 F9 09			         cmp        cl, 09h            ; if character is tab
 0032  74 EA			         je         printtab           ;
				;---------------------------------------
				; if (ch == 10)
				;---------------------------------------
 0034  3C 1A			         cmp        al, 1Ah            ; if the character is EOF
 0036  74 0A			         je         exit               ; exit the program
 0038  3C 0A			         cmp        al, 0Ah            ; If LF then
 003A  74 D6			         je         set                ; reset the counter and read the next char
 003C  38 DD			         cmp        ch,bl              ; compare counter with with user enter value
 003E  74 D2			         je         set                ;
 0040  EB D2			         jmp        while_             ; repeat the loop
				;---------------------------------------
				; Terminate the Program
				;---------------------------------------
 0042				exit:
 0042  B8 4C00			         mov        ax,4c00h           ; set dos code to terminate program
 0045  CD 21			         int        21h                ; return to dos
				         end        tabs               ;end marks the end of the source code
				                                       ;....and specifies where you want the
				                                       ;....program to start execution
				;---------------------------------------

Microsoft (R) Macro Assembler Version 6.11		    06/25/19 23:29:34
tabs.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	16 Bit	 0000	  Word	  Public  'DATA'	
STACK  . . . . . . . . . . . . .	16 Bit	 0100	  Para	  Stack	  'STACK'	 
_TEXT  . . . . . . . . . . . . .	16 Bit	 0047	  Word	  Public  'CODE'	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0000h	 
@Model . . . . . . . . . . . . .	Number	 0002h	 
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
exit . . . . . . . . . . . . . .	L Near	 0042	  _TEXT	
printtab . . . . . . . . . . . .	L Near	 001E	  _TEXT	
put  . . . . . . . . . . . . . .	L Near	 0026	  _TEXT	
set  . . . . . . . . . . . . . .	L Near	 0012	  _TEXT	
tabs . . . . . . . . . . . . . .	L Near	 0000	  _TEXT	
while_ . . . . . . . . . . . . .	L Near	 0014	  _TEXT	

	   0 Warnings
	   0 Errors
